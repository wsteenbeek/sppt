% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sppt.R
\name{sppt}
\alias{sppt}
\title{Performs Andresen's Spatial Point Pattern Test}
\usage{
sppt(
  base_points.sp,
  test_points.sp,
  uoa.sp,
  outputlist = FALSE,
  nsamples = 200,
  percpoints = 85,
  conf_level = 95,
  bootstrap = FALSE
)
}
\arguments{
\item{base_points.sp}{the Base data of type SpatialPoints*}

\item{test_points.sp}{the Test data of type SpatialPoints*}

\item{uoa.sp}{the units of analysis of type SpatialPolygons*}

\item{outputlist}{should the output of the function be a list, including all simulation runs as a matrix? default = FALSE}

\item{nsamples}{number of samples in simulations, default = 200}

\item{percpoints}{percentage of points used in simulations, default = 85}

\item{conf_level}{confidence interval, default = 95}

\item{bootstrap}{logical, default is FALSE}
}
\value{
When \code{outputlist} is \code{FALSE} (the default), returns the
        \code{uoa.sp} spatialobject including SPPT outcomes. When
        \code{outputlist} is \code{TRUE} (the default), returns a list with
        the first list element the \code{uoa.sp} spatialobject including
        SPPT outcomes, and the second list element a matrix of all
        \code{nsamples} simulations.
}
\description{
This is a point pattern test that measures the degree of
similarity at the local level between two spatial point patterns
and is an area-based test.
}
\details{
In its default settings, the function is the original Andresen's sppt, so
only Test data is randomly resampled (without replacement, by default
using 85% of the Test points).

By changing 'bootstrap' to TRUE, the 'percpoints' argument is ignored
and the Test points are a bootstrapped sample: within each simualed dataset,
as many points as the test set itself are sampled, but with replacement
within each sample.
}
\examples{
# Plot areas, base points data, and test points data
plot(areas.sp)
text(coordinates(areas.sp), label = areas.sp$ID)
text(coordinates(points1.sp), label = points1.sp$ID, col="blue")
text(coordinates(points2.sp), label = points2.sp$ID, col="red")

set.seed(76772)
myoutput <- sppt(base_points.sp = points1.sp, test_points.sp = points2.sp, uoa.sp = areas.sp)
summary_sppt(myoutput)
myoutput@data

# is exactly the same as:
set.seed(76772)
myoutput <- sppt(points1.sp, points2.sp, areas.sp,
                 outputlist=FALSE, nsamples=200, percpoints=85, conf_level=95)
myoutput@data

# now with a list being outputted, the 2nd element has all simulation outcomes
set.seed(76772)
myoutput <- sppt(points1.sp, points2.sp, areas.sp, outputlist = TRUE)
head(myoutput[[1]]@data) # same as previous
head(myoutput[[2]])

# Vancouver data
set.seed(9866)
myoutput <- sppt(vancouver_points1.sp, vancouver_points2.sp, vancouver_areas.sp)
summary_sppt(myoutput)

# Vancouver data, using a bootstrap approach instead of Andresen's subsampling method
set.seed(9866)
myoutput <- sppt(vancouver_points1.sp, vancouver_points2.sp, vancouver_areas.sp, bootstrap = TRUE)
summary_sppt(myoutput)

}
